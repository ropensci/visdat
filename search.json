[{"path":[]},{"path":"http://ropensci.github.io/visdat/CODE_OF_CONDUCT.html","id":"our-pledge","dir":"","previous_headings":"","what":"Our Pledge","title":"Contributor Covenant Code of Conduct","text":"members, contributors, leaders pledge make participation community harassment-free experience everyone, regardless age, body size, visible invisible disability, ethnicity, sex characteristics, gender identity expression, level experience, education, socio-economic status, nationality, personal appearance, race, religion, sexual identity orientation. pledge act interact ways contribute open, welcoming, diverse, inclusive, healthy community.","code":""},{"path":"http://ropensci.github.io/visdat/CODE_OF_CONDUCT.html","id":"our-standards","dir":"","previous_headings":"","what":"Our Standards","title":"Contributor Covenant Code of Conduct","text":"Examples behavior contributes positive environment community include: Demonstrating empathy kindness toward people respectful differing opinions, viewpoints, experiences Giving gracefully accepting constructive feedback Accepting responsibility apologizing affected mistakes, learning experience Focusing best just us individuals, overall community Examples unacceptable behavior include: use sexualized language imagery, sexual attention advances kind Trolling, insulting derogatory comments, personal political attacks Public private harassment Publishing others’ private information, physical email address, without explicit permission conduct reasonably considered inappropriate professional setting","code":""},{"path":"http://ropensci.github.io/visdat/CODE_OF_CONDUCT.html","id":"enforcement-responsibilities","dir":"","previous_headings":"","what":"Enforcement Responsibilities","title":"Contributor Covenant Code of Conduct","text":"Community leaders responsible clarifying enforcing standards acceptable behavior take appropriate fair corrective action response behavior deem inappropriate, threatening, offensive, harmful. Community leaders right responsibility remove, edit, reject comments, commits, code, wiki edits, issues, contributions aligned Code Conduct, communicate reasons moderation decisions appropriate.","code":""},{"path":"http://ropensci.github.io/visdat/CODE_OF_CONDUCT.html","id":"scope","dir":"","previous_headings":"","what":"Scope","title":"Contributor Covenant Code of Conduct","text":"Code Conduct applies within community spaces, also applies individual officially representing community public spaces. Examples representing community include using official e-mail address, posting via official social media account, acting appointed representative online offline event.","code":""},{"path":"http://ropensci.github.io/visdat/CODE_OF_CONDUCT.html","id":"enforcement","dir":"","previous_headings":"","what":"Enforcement","title":"Contributor Covenant Code of Conduct","text":"Instances abusive, harassing, otherwise unacceptable behavior may reported community leaders responsible enforcement [INSERT CONTACT METHOD]. complaints reviewed investigated promptly fairly. community leaders obligated respect privacy security reporter incident.","code":""},{"path":"http://ropensci.github.io/visdat/CODE_OF_CONDUCT.html","id":"enforcement-guidelines","dir":"","previous_headings":"","what":"Enforcement Guidelines","title":"Contributor Covenant Code of Conduct","text":"Community leaders follow Community Impact Guidelines determining consequences action deem violation Code Conduct:","code":""},{"path":"http://ropensci.github.io/visdat/CODE_OF_CONDUCT.html","id":"1-correction","dir":"","previous_headings":"Enforcement Guidelines","what":"1. Correction","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Use inappropriate language behavior deemed unprofessional unwelcome community. Consequence: private, written warning community leaders, providing clarity around nature violation explanation behavior inappropriate. public apology may requested.","code":""},{"path":"http://ropensci.github.io/visdat/CODE_OF_CONDUCT.html","id":"2-warning","dir":"","previous_headings":"Enforcement Guidelines","what":"2. Warning","title":"Contributor Covenant Code of Conduct","text":"Community Impact: violation single incident series actions. Consequence: warning consequences continued behavior. interaction people involved, including unsolicited interaction enforcing Code Conduct, specified period time. includes avoiding interactions community spaces well external channels like social media. Violating terms may lead temporary permanent ban.","code":""},{"path":"http://ropensci.github.io/visdat/CODE_OF_CONDUCT.html","id":"3-temporary-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"3. Temporary Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: serious violation community standards, including sustained inappropriate behavior. Consequence: temporary ban sort interaction public communication community specified period time. public private interaction people involved, including unsolicited interaction enforcing Code Conduct, allowed period. Violating terms may lead permanent ban.","code":""},{"path":"http://ropensci.github.io/visdat/CODE_OF_CONDUCT.html","id":"4-permanent-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"4. Permanent Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Demonstrating pattern violation community standards, including sustained inappropriate behavior, harassment individual, aggression toward disparagement classes individuals. Consequence: permanent ban sort public interaction within community.","code":""},{"path":"http://ropensci.github.io/visdat/CODE_OF_CONDUCT.html","id":"attribution","dir":"","previous_headings":"","what":"Attribution","title":"Contributor Covenant Code of Conduct","text":"Code Conduct adapted Contributor Covenant, version 2.0, available https://www.contributor-covenant.org/version/2/0/ code_of_conduct.html. Community Impact Guidelines inspired Mozilla’s code conduct enforcement ladder. answers common questions code conduct, see FAQ https://www.contributor-covenant.org/faq. Translations available https:// www.contributor-covenant.org/translations.","code":""},{"path":"http://ropensci.github.io/visdat/CONDUCT.html","id":null,"dir":"","previous_headings":"","what":"Contributor Code of Conduct","title":"Contributor Code of Conduct","text":"contributors maintainers project, pledge respect people contribute reporting issues, posting feature requests, updating documentation, submitting pull requests patches, activities. committed making participation project harassment-free experience everyone, regardless level experience, gender, gender identity expression, sexual orientation, disability, personal appearance, body size, race, ethnicity, age, religion. Examples unacceptable behavior participants include use sexual language imagery, derogatory comments personal attacks, trolling, public private harassment, insults, unprofessional conduct. Project maintainers right responsibility remove, edit, reject comments, commits, code, wiki edits, issues, contributions aligned Code Conduct. Project maintainers follow Code Conduct may removed project team. Instances abusive, harassing, otherwise unacceptable behavior may reported opening issue contacting one project maintainers. Code Conduct adapted Contributor Covenant (http:contributor-covenant.org), version 1.0.0, available http://contributor-covenant.org/version/1/0/0/","code":""},{"path":"http://ropensci.github.io/visdat/articles/customising-colour-palettes.html","id":"how-to-provide-your-own-colour-palette","dir":"Articles","previous_headings":"","what":"How to provide your own colour palette?","title":"Customising colour palettes in visdat","text":"vignette shoes provide colour palette visdat. visdat plot ggplot object - can use tools ggplot tinker colours. case, scale_fill_manual function. “standard” visdat plot might like :  can name colours like (first loading ggplot package.  pretty, uh, “popping” set colours? can also use hex colours instead. Say, taken palette():  can get nicer ones? Well, can use ggplot’s scale_fill_* functions inside ggplot2 example:   Happy colour palette exploring! might want take look following colour palettes packages: scico colorspace wesanderson","code":"vis_dat(typical_data) library(ggplot2) vis_dat(typical_data) +   scale_fill_manual(     values = c(       \"character\" = \"red\",       \"factor\" = \"blue\",       \"logical\" = \"green\",       \"numeric\" = \"purple\",       \"NA\" = \"gray\"   )) palette() #> [1] \"black\"   \"#DF536B\" \"#61D04F\" \"#2297E6\" \"#28E2E5\" \"#CD0BBC\" \"#F5C710\" #> [8] \"gray62\" vis_dat(typical_data) +   scale_fill_manual(     values = c(       \"character\" = \"#61D04F\",       \"factor\" = \"#2297E6\",       \"logical\" = \"#28E2E5\",       \"numeric\" = \"#CD0BBC\",       \"NA\" = \"#F5C710\"   )) vis_dat(typical_data) +   scale_fill_brewer() #> Warning: Removed 2000 rows containing missing values (`geom_raster()`). vis_dat(typical_data) +   scale_fill_viridis_d() #> Warning: Removed 2000 rows containing missing values (`geom_raster()`)."},{"path":"http://ropensci.github.io/visdat/articles/using_visdat.html","id":"vis_dat","dir":"Articles","previous_headings":"","what":"vis_dat","title":"Using visdat","text":"Let’s see ’s inside dataset airquality, contains information daily air quality measurements New York May September 1973. information dataset can found ?airquality. plot tells us R reads dataset numeric integer values, missing data Ozone Solar.R. classes represented legend, missing data represented grey. column/variable names listed x axis. default, vis_dat sorts columns according type data vectors. can turn setting sort_type = FALSE. feature better illustrated using typical_data dataset, created using wakefield contained within visdat.","code":"vis_dat(airquality) vis_dat(typical_data) vis_dat(typical_data,          sort_type = FALSE)"},{"path":"http://ropensci.github.io/visdat/articles/using_visdat.html","id":"vis_miss","dir":"Articles","previous_headings":"","what":"vis_miss","title":"Using visdat","text":"can explore missing data using vis_miss.  Notice percentages missingness provided data. accurate 1 decimal place. vis_miss indicates small amount missing data <0.1% missingness.  vis_miss also indicate missing data .  Columns can arranged columns missingness, setting sort_miss = TRUE.  missingness can clustered setting cluster = TRUE  explore missingness structure dataset, recommend naniar package, provides general tools graphical numerical exploration missing values.","code":"vis_miss(airquality) df_test <- data.frame(x1 = 1:10000,                       x2 = rep(\"A\", 10000),                       x3 = c(rep(1L, 9999), NA))  vis_miss(df_test) df_test <- data.frame(x1 = 1:10000,                       x2 = rep(\"tidy\", 10000),                       x3 = rep(\"data\", 10000))  vis_miss(df_test) vis_miss(airquality,          sort_miss = TRUE) vis_miss(airquality,           cluster = TRUE)"},{"path":"http://ropensci.github.io/visdat/articles/using_visdat.html","id":"vis_compare","dir":"Articles","previous_headings":"","what":"vis_compare","title":"Using visdat","text":"Sometimes want see changed data. vis_compare() displays differences two dataframes size. Let’s look example. Let’s make changes chickwts, compare new dataset.  differences marked blue. try compare differences dimensions different, get ugly error.","code":"set.seed(2019-04-03-1107) chickwts_diff <- chickwts chickwts_diff[sample(1:nrow(chickwts), 30),sample(1:ncol(chickwts), 2)] <- NA  vis_compare(chickwts_diff, chickwts) chickwts_diff_2 <- chickwts chickwts_diff_2$new_col <- chickwts_diff_2$weight*2  vis_compare(chickwts, chickwts_diff_2) # Error in vis_compare(chickwts, chickwts_diff_2) :  #   Dimensions of df1 and df2 are not the same. vis_compare requires dataframes of identical dimensions."},{"path":"http://ropensci.github.io/visdat/articles/using_visdat.html","id":"vis_expect","dir":"Articles","previous_headings":"","what":"vis_expect","title":"Using visdat","text":"vis_expect visualises certain conditions values data. example, sure whether expect values greater 25 data (airquality), write: vis_expect(airquality, ~.x >= 25), can see times values data greater equal 25.  shows proportion times values greater 25, well missings. also, example, explore set bad strings, possible NA values visualise using vis_expect(data, ~.x %% bad_strings) bad_strings character vector containing bad strings like N , N/etc.","code":"vis_expect(airquality, ~.x >= 25) bad_data <- data.frame(x = c(rnorm(100), rep(\"N/A\", 10)),                        y = c(rep(\"N A \", 30), rnorm(80)))  vis_expect(bad_data, ~.x %in% c(\"N/A\", \"N A \"))"},{"path":"http://ropensci.github.io/visdat/articles/using_visdat.html","id":"vis_cor","dir":"Articles","previous_headings":"","what":"vis_cor","title":"Using visdat","text":"make easy plot correlations data, use vis_cor:  hood, vis_cor powered cor function base R, takes character string indicating correlation coefficient (covariance) computed. One “pearson” (default), “kendall”, “spearman”.  can also specify missing data using na_action function, borrows cor methods. can “everything”, “.obs”, “complete.obs”, “na..complete”, “pairwise.complete.obs” (default), e.g.:","code":"vis_cor(airquality) vis_cor(airquality, cor_method = \"spearman\") vis_cor(airquality,         na_action = \"complete.obs\")"},{"path":"http://ropensci.github.io/visdat/articles/using_visdat.html","id":"vis_value","dir":"Articles","previous_headings":"","what":"vis_value","title":"Using visdat","text":"vis_value() visualises values data 0 1 scale.  works numeric data: might need subset data beforehand like :  can useful arrange data using vis_value explore possible relationships data:","code":"vis_value(airquality) vis_value(iris) data input can only contain numeric values, please subset the data to the numeric values you would like. dplyr::select_if(data, is.numeric) can be helpful here! iris %>%   select_if(is.numeric) %>%   vis_value() airquality %>%   arrange(Wind) %>%   vis_value()"},{"path":"http://ropensci.github.io/visdat/articles/using_visdat.html","id":"vis_binary","dir":"Articles","previous_headings":"","what":"vis_binary","title":"Using visdat","text":"vis_binary() visualises occurrence binary values data. similar vis_value() except just focusses values NA, 0, 1.","code":"vis_binary(dat_bin)"},{"path":"http://ropensci.github.io/visdat/articles/using_visdat.html","id":"vis_guess","dir":"Articles","previous_headings":"","what":"vis_guess","title":"Using visdat","text":"vis_guess() takes guess cell . ’s best illustrated using messy data, ’ll make .  see many different kinds data dataframe. analyst might depressing finding. can see comparison . , might just assume data weird ’s factors - worse, notice problem. moment vis_guess slow. Please take consideration using data 1000 rows. ’re looking ways making faster, potentially using methods parallel package, extending c++ code readr:::collectorGuess.","code":"messy_vector <- c(TRUE,                   T,                   \"TRUE\",                   \"T\",                   \"01/01/01\",                   \"01/01/2001\",                   NA,                   NaN,                   \"NA\",                   \"Na\",                   \"na\",                   \"10\",                   10,                   \"10.1\",                   10.1,                   \"abc\",                   \"$%TG\")  set.seed(1114) messy_df <- data.frame(var1 = messy_vector,                        var2 = sample(messy_vector),                        var3 = sample(messy_vector)) vis_guess(messy_df) vis_dat(messy_df)"},{"path":"http://ropensci.github.io/visdat/articles/using_visdat.html","id":"interactivity","dir":"Articles","previous_headings":"","what":"Interactivity","title":"Using visdat","text":"can make plots visdat wrapping plotly::ggplotly: future functions, written plotly nice standardised -hover behaviour. like see work, please see development version GitHub.","code":"library(plotly) ggplotly(vis_dat(airquality)) ggplotly(vis_miss(airquality)) ggplotly(vis_guess(airquality))"},{"path":"http://ropensci.github.io/visdat/articles/using_visdat.html","id":"future-work","dir":"Articles","previous_headings":"","what":"Future work","title":"Using visdat","text":"Future work focussed making visdat stable, improving speed plotting, adding interactive versions function.","code":""},{"path":"http://ropensci.github.io/visdat/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Nicholas Tierney. Author, maintainer. Sean Hughes. Reviewer.            Sean Hughes reviewed package rOpenSci,                    see https://github.com/ropensci/onboarding/issues/87 Mara Averick. Reviewer.            Mara Averick reviewed package rOpenSci, see        https://github.com/ropensci/onboarding/issues/87 Stuart Lee. Contributor. Earo Wang. Contributor. Nic Crane. Contributor. Christophe Regouby. Contributor.","code":""},{"path":"http://ropensci.github.io/visdat/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Tierney N (2017). “visdat: Visualising Whole Data Frames.” JOSS, 2(16), 355. doi:10.21105/joss.00355, http://dx.doi.org/10.21105/joss.00355.","code":"@Article{,   title = {visdat: Visualising Whole Data Frames},   author = {Nicholas Tierney},   doi = {10.21105/joss.00355},   url = {http://dx.doi.org/10.21105/joss.00355},   year = {2017},   publisher = {Journal of Open Source Software},   volume = {2},   number = {16},   pages = {355},   journal = {JOSS}, }"},{"path":[]},{"path":"http://ropensci.github.io/visdat/index.html","id":"how-to-install","dir":"","previous_headings":"","what":"How to install","title":"Preliminary Visualisation of Data","text":"visdat available CRAN like use development version, install github :","code":"install.packages(\"visdat\") # install.packages(\"devtools\") devtools::install_github(\"ropensci/visdat\")"},{"path":"http://ropensci.github.io/visdat/index.html","id":"what-does-visdat-do","dir":"","previous_headings":"","what":"What does visdat do?","title":"Preliminary Visualisation of Data","text":"Initially inspired csv-fingerprint, vis_dat helps visualise dataframe “get look data” displaying variable classes dataframe plot vis_dat, getting brief look missing data patterns using vis_miss. visdat 6 functions: vis_dat() visualises dataframe showing classes columns , also displaying missing data. vis_miss() visualises just missing data, allows missingness clustered columns rearranged. vis_miss() similar missing.pattern.plot mi package. Unfortunately missing.pattern.plot longer mi package (14/02/2016). vis_compare() visualise differences two dataframes dimensions vis_expect() visualise certain conditions hold true data vis_cor() visualise correlation variables nice heatmap vis_guess() visualise individual class value data vis_value() visualise value class cell data vis_binary() visualise occurrence binary values data can read visdat vignette, [“using visdat”]https://docs.ropensci.org/visdat/articles/using_visdat.html).","code":""},{"path":"http://ropensci.github.io/visdat/index.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of Conduct","title":"Preliminary Visualisation of Data","text":"Please note visdat project released Contributor Code Conduct. contributing project, agree abide terms.","code":""},{"path":[]},{"path":"http://ropensci.github.io/visdat/index.html","id":"using-vis_dat","dir":"","previous_headings":"","what":"Using vis_dat()","title":"Preliminary Visualisation of Data","text":"Let’s see ’s inside airquality dataset base R, contains information daily air quality measurements New York May September 1973. information dataset can found ?airquality.  plot tells us R reads dataset numeric integer values, missing data Ozone Solar.R. classes represented legend, missing data represented grey. column/variable names listed x axis. vis_dat() function also facet argument, can create small multiples similar plot level variable, e.g., Month:  currently also exist vis_miss(), vis_cor() functions.","code":"library(visdat)  vis_dat(airquality) vis_dat(airquality, facet = Month)"},{"path":"http://ropensci.github.io/visdat/index.html","id":"using-vis_miss","dir":"","previous_headings":"","what":"Using vis_miss()","title":"Preliminary Visualisation of Data","text":"can explore missing data using vis_miss():  Percentages missing/complete vis_miss accurate integer (whole number). get accurate thorough exploratory summaries missingness, recommend naniar R package can cluster missingness setting cluster = TRUE:  Columns can also arranged columns missingness, setting sort_miss = TRUE:  vis_miss indicates small amount missing data <0.1% missingness:  vis_miss also indicate missing data :  explore missingness structure dataset, recommend naniar package, provides general tools graphical numerical exploration missing values.","code":"vis_miss(airquality) vis_miss(airquality,           cluster = TRUE) vis_miss(airquality,          sort_miss = TRUE) test_miss_df <- data.frame(x1 = 1:10000,                            x2 = rep(\"A\", 10000),                            x3 = c(rep(1L, 9999), NA))  vis_miss(test_miss_df) vis_miss(mtcars)"},{"path":"http://ropensci.github.io/visdat/index.html","id":"using-vis_compare","dir":"","previous_headings":"","what":"Using vis_compare()","title":"Preliminary Visualisation of Data","text":"Sometimes want see changed data. vis_compare() displays differences two dataframes size. Let’s look example. Let’s make changes chickwts, compare new dataset:  differences marked blue. try compare differences dimensions different, get ugly error:","code":"set.seed(2019-04-03-1105) chickwts_diff <- chickwts chickwts_diff[sample(1:nrow(chickwts), 30),sample(1:ncol(chickwts), 2)] <- NA  vis_compare(chickwts_diff, chickwts) chickwts_diff_2 <- chickwts chickwts_diff_2$new_col <- chickwts_diff_2$weight*2  vis_compare(chickwts, chickwts_diff_2) # Error in vis_compare(chickwts, chickwts_diff_2) :  #   Dimensions of df1 and df2 are not the same. vis_compare requires dataframes of identical dimensions."},{"path":"http://ropensci.github.io/visdat/index.html","id":"using-vis_expect","dir":"","previous_headings":"","what":"Using vis_expect()","title":"Preliminary Visualisation of Data","text":"vis_expect visualises certain conditions values data. example, sure whether expect values greater 25 data (airquality), write: vis_expect(airquality, ~.x>=25), can see times values data greater equal 25:  shows proportion times values greater 25, well missings.","code":"vis_expect(airquality, ~.x >= 25)"},{"path":"http://ropensci.github.io/visdat/index.html","id":"using-vis_cor","dir":"","previous_headings":"","what":"Using vis_cor()","title":"Preliminary Visualisation of Data","text":"make easy plot correlations data, use vis_cor:","code":"vis_cor(airquality)"},{"path":"http://ropensci.github.io/visdat/index.html","id":"using-vis_value","dir":"","previous_headings":"","what":"Using vis_value","title":"Preliminary Visualisation of Data","text":"vis_value() visualises values data 0 1 scale.  works numeric data, might get strange results using factors: might need subset data beforehand like :","code":"vis_value(airquality) library(ggplot2) vis_value(iris) data input can only contain numeric values, please subset the data to the numeric values you would like. dplyr::select_if(data, is.numeric) can be helpful here! library(dplyr) #>  #> Attaching package: 'dplyr' #> The following objects are masked from 'package:stats': #>  #>     filter, lag #> The following objects are masked from 'package:base': #>  #>     intersect, setdiff, setequal, union  iris %>%   select_if(is.numeric) %>%   vis_value()"},{"path":"http://ropensci.github.io/visdat/index.html","id":"using-vis_binary","dir":"","previous_headings":"","what":"Using vis_binary()","title":"Preliminary Visualisation of Data","text":"vis_binary() visualises binary values. See use example data, dat_bin  don’t binary values warning shown.","code":"vis_binary(dat_bin) vis_binary(airquality) Error in test_if_all_binary(data) :    data input can only contain binary values - this means either 0 or 1, or NA. Please subset the data to be binary values, or see ?vis_value."},{"path":"http://ropensci.github.io/visdat/index.html","id":"using-vis_guess","dir":"","previous_headings":"","what":"Using vis_guess()","title":"Preliminary Visualisation of Data","text":"vis_guess() takes guess cell . ’s best illustrated using messy data, ’ll make :  see many different kinds data dataframe. analyst might depressing finding. can see comparison .","code":"messy_vector <- c(TRUE,                   T,                   \"TRUE\",                   \"T\",                   \"01/01/01\",                   \"01/01/2001\",                   NA,                   NaN,                   \"NA\",                   \"Na\",                   \"na\",                   \"10\",                   10,                   \"10.1\",                   10.1,                   \"abc\",                   \"$%TG\")  set.seed(2019-04-03-1106) messy_df <- data.frame(var1 = messy_vector,                        var2 = sample(messy_vector),                        var3 = sample(messy_vector)) vis_guess(messy_df) vis_dat(messy_df)"},{"path":"http://ropensci.github.io/visdat/index.html","id":"thank-yous","dir":"","previous_headings":"","what":"Thank yous","title":"Preliminary Visualisation of Data","text":"Thank Ivan Hanigan first commented suggestion made blog post initial prototype ggplot_missing, Jenny Bryan, whose tweet got thinking vis_dat, code contributions removed lot errors. Thank Hadley Wickham suggesting use internals readr make vis_guess work. Thank Miles McBain suggestions improve vis_guess. resulted making least 2-3 times faster. Thanks Carson Sievert writing code combined plotly visdat, Noam Ross suggesting first place. Thank also Earo Wang Stuart Lee help getting capturing expressions vis_expect. Finally thank rOpenSci ’s amazing onboarding process, process made visdat much better package, thanks editor Noam Ross (@noamross), reviewers Sean Hughes (@seaaan) Mara Averick (@batpigandme).","code":""},{"path":"http://ropensci.github.io/visdat/reference/abbreviate_vars.html","id":null,"dir":"Reference","previous_headings":"","what":"Abbreviate all variables in a data frame — abbreviate_vars","title":"Abbreviate all variables in a data frame — abbreviate_vars","text":"can useful abbreviate variable names data set make easier plot. function takes data set minimum length abbreviate data .","code":""},{"path":"http://ropensci.github.io/visdat/reference/abbreviate_vars.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Abbreviate all variables in a data frame — abbreviate_vars","text":"","code":"abbreviate_vars(data, min_length = 10)"},{"path":"http://ropensci.github.io/visdat/reference/abbreviate_vars.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Abbreviate all variables in a data frame — abbreviate_vars","text":"data data.frame min_length minimum number characters abbreviate ","code":""},{"path":"http://ropensci.github.io/visdat/reference/abbreviate_vars.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Abbreviate all variables in a data frame — abbreviate_vars","text":"data frame abbreviated variable names","code":""},{"path":"http://ropensci.github.io/visdat/reference/abbreviate_vars.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Abbreviate all variables in a data frame — abbreviate_vars","text":"","code":"long_data <- data.frame(   really_really_long_name = c(NA, NA, 1:8),   very_quite_long_name = c(-1:-8, NA, NA),   this_long_name_is_something_else = c(NA, NA,                                        seq(from = 0, to = 1, length.out = 8)) )  vis_miss(long_data)  long_data %>% abbreviate_vars() %>% vis_miss()"},{"path":"http://ropensci.github.io/visdat/reference/dat_bin.html","id":null,"dir":"Reference","previous_headings":"","what":"A small toy dataset of binary data with missings. — dat_bin","title":"A small toy dataset of binary data with missings. — dat_bin","text":"dataset containing binary values missing values. created illustrate usage vis_binary().","code":""},{"path":"http://ropensci.github.io/visdat/reference/dat_bin.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A small toy dataset of binary data with missings. — dat_bin","text":"","code":"dat_bin"},{"path":"http://ropensci.github.io/visdat/reference/dat_bin.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"A small toy dataset of binary data with missings. — dat_bin","text":"data frame 100 rows 3 variables: x binary variable missing values. y binary variable missing values. z binary variable missing values.","code":""},{"path":"http://ropensci.github.io/visdat/reference/data-vis-cor.html","id":null,"dir":"Reference","previous_headings":"","what":"Return data used to create vis_cor plot — data-vis-cor","title":"Return data used to create vis_cor plot — data-vis-cor","text":"Return data used create vis_cor plot Create tidy dataframe correlations suitable plotting","code":""},{"path":"http://ropensci.github.io/visdat/reference/data-vis-cor.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Return data used to create vis_cor plot — data-vis-cor","text":"","code":"data_vis_cor(x, ...)  # S3 method for default data_vis_cor(x, ...)  # S3 method for data.frame data_vis_cor(   x,   cor_method = \"pearson\",   na_action = \"pairwise.complete.obs\",   ... )  # S3 method for grouped_df data_vis_cor(x, ...)"},{"path":"http://ropensci.github.io/visdat/reference/data-vis-cor.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Return data used to create vis_cor plot — data-vis-cor","text":"x data.frame ... extra arguments (currently unused) cor_method correlation method use, cor: \"character string indicating correlation coefficient (covariance) computed. One \"pearson\" (default), \"kendall\", \"spearman\": can abbreviated.\" na_action method computing covariances missing values present. can \"everything\", \".obs\", \"complete.obs\", \"na..complete\", \"pairwise.complete.obs\" (default). option taken cor function argument use.","code":""},{"path":"http://ropensci.github.io/visdat/reference/data-vis-cor.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Return data used to create vis_cor plot — data-vis-cor","text":"data frame tidy dataframe correlations","code":""},{"path":"http://ropensci.github.io/visdat/reference/data-vis-cor.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Return data used to create vis_cor plot — data-vis-cor","text":"","code":"data_vis_cor(airquality) #> # A tibble: 36 × 3 #>    row_1   row_2     value #>    <chr>   <chr>     <dbl> #>  1 Ozone   Ozone    1      #>  2 Ozone   Solar.R  0.348  #>  3 Ozone   Wind    -0.602  #>  4 Ozone   Temp     0.698  #>  5 Ozone   Month    0.165  #>  6 Ozone   Day     -0.0132 #>  7 Solar.R Ozone    0.348  #>  8 Solar.R Solar.R  1      #>  9 Solar.R Wind    -0.0568 #> 10 Solar.R Temp     0.276  #> # … with 26 more rows  if (FALSE) { #return vis_dat data for each group library(dplyr) airquality %>%   group_by(Month) %>%   data_vis_cor() } data_vis_cor(airquality) #> # A tibble: 36 × 3 #>    row_1   row_2     value #>    <chr>   <chr>     <dbl> #>  1 Ozone   Ozone    1      #>  2 Ozone   Solar.R  0.348  #>  3 Ozone   Wind    -0.602  #>  4 Ozone   Temp     0.698  #>  5 Ozone   Month    0.165  #>  6 Ozone   Day     -0.0132 #>  7 Solar.R Ozone    0.348  #>  8 Solar.R Solar.R  1      #>  9 Solar.R Wind    -0.0568 #> 10 Solar.R Temp     0.276  #> # … with 26 more rows"},{"path":"http://ropensci.github.io/visdat/reference/data-vis-dat.html","id":null,"dir":"Reference","previous_headings":"","what":"Return data used to create vis_dat plot — data-vis-dat","title":"Return data used to create vis_dat plot — data-vis-dat","text":"Return data used create vis_dat plot","code":""},{"path":"http://ropensci.github.io/visdat/reference/data-vis-dat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Return data used to create vis_dat plot — data-vis-dat","text":"","code":"data_vis_dat(x, ...)  # S3 method for default data_vis_dat(x, ...)  # S3 method for data.frame data_vis_dat(x, ...)  # S3 method for grouped_df data_vis_dat(x, ...)"},{"path":"http://ropensci.github.io/visdat/reference/data-vis-dat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Return data used to create vis_dat plot — data-vis-dat","text":"x data.frame ... extra arguments (currently unused)","code":""},{"path":"http://ropensci.github.io/visdat/reference/data-vis-dat.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Return data used to create vis_dat plot — data-vis-dat","text":"data frame","code":""},{"path":"http://ropensci.github.io/visdat/reference/data-vis-dat.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Return data used to create vis_dat plot — data-vis-dat","text":"","code":"data_vis_dat(airquality) #> # A tibble: 918 × 4 #>     rows variable valueType value #>    <int> <chr>    <chr>     <chr> #>  1     1 Day      integer   41    #>  2     1 Month    integer   190   #>  3     1 Ozone    integer   7.4   #>  4     1 Solar.R  integer   67    #>  5     1 Temp     integer   5     #>  6     1 Wind     numeric   1     #>  7     2 Day      integer   36    #>  8     2 Month    integer   118   #>  9     2 Ozone    integer   8     #> 10     2 Solar.R  integer   72    #> # … with 908 more rows  if (FALSE) { #return vis_dat data for each group library(dplyr) airquality %>%   group_by(Month) %>%   data_vis_dat() }"},{"path":"http://ropensci.github.io/visdat/reference/data-vis-miss.html","id":null,"dir":"Reference","previous_headings":"","what":"Return data used to create vis_miss plot — data-vis-miss","title":"Return data used to create vis_miss plot — data-vis-miss","text":"Return data used create vis_miss plot Create tidy dataframe missing data suitable plotting","code":""},{"path":"http://ropensci.github.io/visdat/reference/data-vis-miss.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Return data used to create vis_miss plot — data-vis-miss","text":"","code":"data_vis_miss(x, ...)  # S3 method for default data_vis_miss(x, ...)  # S3 method for data.frame data_vis_miss(x, cluster = FALSE, ...)  # S3 method for grouped_df data_vis_miss(x, ...)"},{"path":"http://ropensci.github.io/visdat/reference/data-vis-miss.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Return data used to create vis_miss plot — data-vis-miss","text":"x data.frame ... extra arguments (currently unused) cluster logical - whether cluster missingness. Default FALSE.","code":""},{"path":"http://ropensci.github.io/visdat/reference/data-vis-miss.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Return data used to create vis_miss plot — data-vis-miss","text":"data frame tidy dataframe missing data","code":""},{"path":"http://ropensci.github.io/visdat/reference/data-vis-miss.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Return data used to create vis_miss plot — data-vis-miss","text":"","code":"data_vis_miss(airquality) #> # A tibble: 918 × 4 #>     rows variable valueType value #>    <int> <chr>    <chr>     <chr> #>  1     1 Day      FALSE     FALSE #>  2     1 Month    FALSE     FALSE #>  3     1 Ozone    FALSE     FALSE #>  4     1 Solar.R  FALSE     FALSE #>  5     1 Temp     FALSE     FALSE #>  6     1 Wind     FALSE     FALSE #>  7     2 Day      FALSE     FALSE #>  8     2 Month    FALSE     FALSE #>  9     2 Ozone    FALSE     FALSE #> 10     2 Solar.R  FALSE     FALSE #> # … with 908 more rows  if (FALSE) { #return vis_dat data for each group library(dplyr) airquality %>%   group_by(Month) %>%   data_vis_miss() } data_vis_miss(airquality) #> # A tibble: 918 × 4 #>     rows variable valueType value #>    <int> <chr>    <chr>     <chr> #>  1     1 Day      FALSE     FALSE #>  2     1 Month    FALSE     FALSE #>  3     1 Ozone    FALSE     FALSE #>  4     1 Solar.R  FALSE     FALSE #>  5     1 Temp     FALSE     FALSE #>  6     1 Wind     FALSE     FALSE #>  7     2 Day      FALSE     FALSE #>  8     2 Month    FALSE     FALSE #>  9     2 Ozone    FALSE     FALSE #> 10     2 Solar.R  FALSE     FALSE #> # … with 908 more rows"},{"path":"http://ropensci.github.io/visdat/reference/pipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Pipe operator — %>%","title":"Pipe operator — %>%","text":"See magrittr::%>% details.","code":""},{"path":"http://ropensci.github.io/visdat/reference/pipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pipe operator — %>%","text":"","code":"lhs %>% rhs"},{"path":"http://ropensci.github.io/visdat/reference/pipe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pipe operator — %>%","text":"lhs value magrittr placeholder. rhs function call using magrittr semantics.","code":""},{"path":"http://ropensci.github.io/visdat/reference/pipe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pipe operator — %>%","text":"result calling rhs(lhs).","code":""},{"path":"http://ropensci.github.io/visdat/reference/typical_data.html","id":null,"dir":"Reference","previous_headings":"","what":"A small toy dataset of imaginary people — typical_data","title":"A small toy dataset of imaginary people — typical_data","text":"dataset containing information randomly generated people, created using excellent wakefield package. created deliberately messy dataset.","code":""},{"path":"http://ropensci.github.io/visdat/reference/typical_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A small toy dataset of imaginary people — typical_data","text":"","code":"typical_data"},{"path":"http://ropensci.github.io/visdat/reference/typical_data.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"A small toy dataset of imaginary people — typical_data","text":"data frame 5000 rows 11 variables: ID Unique identifier individual, sequential character vector zero-padded identification numbers (IDs). see ?wakefield::id Race Race individual, \"Black\", \"White\", \"Hispanic\", \"Asian\", \"\", \"Bi-Racial\", \"Native\", \"Hawaiin\", see ?wakefield::race Age Age individual, see ?wakefield::age Sex Male female, see ?wakefield::sex Height(cm) Height centimeters, see ?wakefield::height IQ vector intelligence quotients (IQ), see ?wakefield::iq Smokes whether person smokes, see ?wakefield::smokes Income Yearly income dollars, see ?wakefield::income Died Whether person died yet., see ?wakefield::died","code":""},{"path":"http://ropensci.github.io/visdat/reference/typical_data_large.html","id":null,"dir":"Reference","previous_headings":"","what":"A small toy dataset of imaginary people — typical_data_large","title":"A small toy dataset of imaginary people — typical_data_large","text":"wider dataset typical_data containing information randomly generated people, created using excellent wakefield package. created deliberately odd / eclectic dataset.","code":""},{"path":"http://ropensci.github.io/visdat/reference/typical_data_large.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A small toy dataset of imaginary people — typical_data_large","text":"","code":"typical_data_large"},{"path":"http://ropensci.github.io/visdat/reference/typical_data_large.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"A small toy dataset of imaginary people — typical_data_large","text":"data frame 300 rows 49 variables: Age Age individual, see ?wakefield::age info Animal vector animals, see ?wakefield::animal Answer vector \"Yes\" \"\" Area vector living areas \"Suburban\", \"Urban\", \"Rural\" Car names cars - see ?mtcars Children vector number children - see ?wakefield::children Coin character vector \"heads\" \"tails\" Color vector vectors \"colors()\" Date vector \"important\" dates individual Death TRUE / FALSE whether person died Dice 6 sided dice result DNA vector GATC nucleobases DOB birth dates Dummy 0/1 dummy var Education education attainment level Employment employee status Eye eye colour Grade percent grades Grade_Level favorite school grade Group control treatment hair hair colours - \"brown\", \"black\", \"blonde\", \"red\" Height height cm Income yearly income Browser choice internet browser IQ intelligence quotient Language random language world Level levels 1 4 Likert likert response - \"strongly agree\", \"agree\", Lorem_Ipsum lorem ipsum text Marital marital status- \"married\", \"divorced\", \"widowed\", \"separated\", etc Military miliary branch Month favorite month Name name Normal random normal number Political favorite political party Race race Religion religion SAT SAT score Sentence uttered sentence Sex_1 sex first child Sex_2 sex second child Smokes smoke Speed median speed travelled car State last state visited USA String random string smashed keyboard Upper last key hit upper case Valid TRUE FALSE answer question Year significant year individuals Zip zip code visited","code":""},{"path":"http://ropensci.github.io/visdat/reference/vis_binary.html","id":null,"dir":"Reference","previous_headings":"","what":"Visualise binary values — vis_binary","title":"Visualise binary values — vis_binary","text":"Visualise binary values","code":""},{"path":"http://ropensci.github.io/visdat/reference/vis_binary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Visualise binary values — vis_binary","text":"","code":"vis_binary(   data,   col_zero = \"salmon\",   col_one = \"steelblue2\",   col_na = \"grey90\",   order = NULL )"},{"path":"http://ropensci.github.io/visdat/reference/vis_binary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Visualise binary values — vis_binary","text":"data data.frame col_zero colour zeroes, default \"salmon\" col_one colour ones, default \"steelblue2\" col_na colour NA, default \"grey90\" order optional character vector order variables","code":""},{"path":"http://ropensci.github.io/visdat/reference/vis_binary.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Visualise binary values — vis_binary","text":"ggplot plot binary values","code":""},{"path":"http://ropensci.github.io/visdat/reference/vis_binary.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Visualise binary values — vis_binary","text":"","code":"vis_binary(dat_bin)   # changing order of variables # create numeric names df <-  setNames(dat_bin, c(\"1.1\", \"8.9\", \"10.4\")) df #> # A tibble: 100 × 3 #>    `1.1` `8.9` `10.4` #>    <int> <int>  <int> #>  1     0    NA      0 #>  2    NA    NA      0 #>  3     0     1      0 #>  4     0     1      1 #>  5     0    NA      1 #>  6     0     0      1 #>  7     1     0      1 #>  8     0     1      0 #>  9     1     1      1 #> 10     1     0      0 #> # … with 90 more rows  # not ideal vis_binary(df)  # good - specify the original order vis_binary(df, order = names(df))"},{"path":"http://ropensci.github.io/visdat/reference/vis_compare.html","id":null,"dir":"Reference","previous_headings":"","what":"Visually compare two dataframes and see where they are different. — vis_compare","title":"Visually compare two dataframes and see where they are different. — vis_compare","text":"vis_compare, like vis_* families, gives --glance ggplot dataset, case, hones visualising two different dataframes dimension, takes two dataframes arguments.","code":""},{"path":"http://ropensci.github.io/visdat/reference/vis_compare.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Visually compare two dataframes and see where they are different. — vis_compare","text":"","code":"vis_compare(df1, df2)"},{"path":"http://ropensci.github.io/visdat/reference/vis_compare.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Visually compare two dataframes and see where they are different. — vis_compare","text":"df1 first dataframe compare df2 second dataframe compare first.","code":""},{"path":"http://ropensci.github.io/visdat/reference/vis_compare.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Visually compare two dataframes and see where they are different. — vis_compare","text":"ggplot2 object displaying values data frame present , .","code":""},{"path":[]},{"path":"http://ropensci.github.io/visdat/reference/vis_compare.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Visually compare two dataframes and see where they are different. — vis_compare","text":"","code":"# make a new dataset of iris that contains some NA values aq_diff <- airquality aq_diff[1:10, 1:2] <- NA vis_compare(airquality, aq_diff)"},{"path":"http://ropensci.github.io/visdat/reference/vis_cor.html","id":null,"dir":"Reference","previous_headings":"","what":"Visualise correlations amongst variables in your data as a heatmap — vis_cor","title":"Visualise correlations amongst variables in your data as a heatmap — vis_cor","text":"Visualise correlations amongst variables data heatmap","code":""},{"path":"http://ropensci.github.io/visdat/reference/vis_cor.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Visualise correlations amongst variables in your data as a heatmap — vis_cor","text":"","code":"vis_cor(   data,   cor_method = \"pearson\",   na_action = \"pairwise.complete.obs\",   facet,   ... )"},{"path":"http://ropensci.github.io/visdat/reference/vis_cor.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Visualise correlations amongst variables in your data as a heatmap — vis_cor","text":"data data.frame cor_method correlation method use, cor: \"character string indicating correlation coefficient (covariance) computed. One \"pearson\" (default), \"kendall\", \"spearman\": can abbreviated.\" na_action method computing covariances missing values present. can \"everything\", \".obs\", \"complete.obs\", \"na..complete\", \"pairwise.complete.obs\" (default). option taken cor function argument use., facet bare unqouted variable use facetting ... extra arguments may want pass cor","code":""},{"path":"http://ropensci.github.io/visdat/reference/vis_cor.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Visualise correlations amongst variables in your data as a heatmap — vis_cor","text":"ggplot2 object","code":""},{"path":"http://ropensci.github.io/visdat/reference/vis_cor.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Visualise correlations amongst variables in your data as a heatmap — vis_cor","text":"","code":"vis_cor(airquality)  vis_cor(airquality, facet = Month)  vis_cor(mtcars)  if (FALSE) { # this will error vis_cor(iris) }"},{"path":"http://ropensci.github.io/visdat/reference/vis_dat.html","id":null,"dir":"Reference","previous_headings":"","what":"Visualises a data.frame to tell you what it contains. — vis_dat","title":"Visualises a data.frame to tell you what it contains. — vis_dat","text":"vis_dat gives --glance ggplot object inside dataframe. Cells coloured according class whether values missing. vis_dat returns ggplot object, easy customize change labels, customize plot","code":""},{"path":"http://ropensci.github.io/visdat/reference/vis_dat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Visualises a data.frame to tell you what it contains. — vis_dat","text":"","code":"vis_dat(   x,   sort_type = TRUE,   palette = \"default\",   warn_large_data = TRUE,   large_data_size = 9e+05,   facet )"},{"path":"http://ropensci.github.io/visdat/reference/vis_dat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Visualises a data.frame to tell you what it contains. — vis_dat","text":"x data.frame object sort_type logical TRUE/FALSE. TRUE (default), sorts type column make easier see data palette character \"default\", \"qual\" \"cb_safe\". \"default\" (default) provides stock ggplot scale separating colours. \"qual\" uses experimental qualitative colour scheme providing distinct colours Type. \"cb_safe\" set colours appropriate colourblindness. \"qual\" \"cb_safe\" drawn http://colorbrewer2.org/. warn_large_data logical - warn large data? Default TRUE see note details large_data_size integer default 900000 (given `nrow(data.frame) * ncol(data.frame)``). can changed. See note details. facet bare variable name variable like facet . default facetting. one variable can facetted. can get data structure using data_vis_dat facetted structure using group_by data_vis_dat.","code":""},{"path":"http://ropensci.github.io/visdat/reference/vis_dat.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Visualises a data.frame to tell you what it contains. — vis_dat","text":"ggplot2 object displaying type values data frame position missing values.","code":""},{"path":"http://ropensci.github.io/visdat/reference/vis_dat.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Visualises a data.frame to tell you what it contains. — vis_dat","text":"datasets might large plot, sometimes creating blank plot - happens, recommend downsampling data, either looking first 1,000 rows taking random sample. means get \"look\" data, better blank plot! See example code suggestions .","code":""},{"path":[]},{"path":"http://ropensci.github.io/visdat/reference/vis_dat.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Visualises a data.frame to tell you what it contains. — vis_dat","text":"","code":"vis_dat(airquality)   # experimental colourblind safe palette vis_dat(airquality, palette = \"cb_safe\")  vis_dat(airquality, palette = \"qual\")   # if you have a large dataset, you might want to try downsampling: if (FALSE) { library(nycflights13) library(dplyr) flights %>%   sample_n(1000) %>%   vis_dat()  flights %>%   slice(1:1000) %>%   vis_dat() }"},{"path":"http://ropensci.github.io/visdat/reference/vis_expect.html","id":null,"dir":"Reference","previous_headings":"","what":"Visualise whether a value is in a data frame — vis_expect","title":"Visualise whether a value is in a data frame — vis_expect","text":"vis_expect visualises certain conditions values data. example, sure whether expect -1 data, write: vis_expect(data, ~.x == -1), can see times values data equal -1. also, example, explore set bad strings, possible NA values visualise using vis_expect(data, ~.x %% bad_strings) bad_strings character vector containing bad strings  like N N/etc.","code":""},{"path":"http://ropensci.github.io/visdat/reference/vis_expect.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Visualise whether a value is in a data frame — vis_expect","text":"","code":"vis_expect(data, expectation, show_perc = TRUE)"},{"path":"http://ropensci.github.io/visdat/reference/vis_expect.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Visualise whether a value is in a data frame — vis_expect","text":"data data.frame expectation formula following syntax: ~.x {condition}. example, writing ~.x < 20 mean \"variable value less 20, replace NA\", ~.x %% {vector} mean \"variable values vector\". show_perc logical. TRUE now adds \\ TRUE FALSE whole dataset legend. Default value TRUE.","code":""},{"path":"http://ropensci.github.io/visdat/reference/vis_expect.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Visualise whether a value is in a data frame — vis_expect","text":"ggplot2 object","code":""},{"path":[]},{"path":"http://ropensci.github.io/visdat/reference/vis_expect.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Visualise whether a value is in a data frame — vis_expect","text":"","code":"dat_test <- tibble::tribble(             ~x, ~y,             -1,  \"A\",             0,  \"B\",             1,  \"C\",             NA, NA             )  vis_expect(dat_test, ~.x == -1)   vis_expect(airquality, ~.x == 5.1)   # explore some common NA strings  common_nas <- c( \"NA\", \"N A\", \"N/A\", \"na\", \"n a\", \"n/a\" )  dat_ms <- tibble::tribble(~x,  ~y,    ~z,                          \"1\",   \"A\",   -100,                          \"3\",   \"N/A\", -99,                          \"NA\",  NA,    -98,                          \"N A\", \"E\",   -101,                          \"na\", \"F\",   -1)  vis_expect(dat_ms, ~.x %in% common_nas)"},{"path":"http://ropensci.github.io/visdat/reference/vis_guess.html","id":null,"dir":"Reference","previous_headings":"","what":"Visualise type guess in a data.frame — vis_guess","title":"Visualise type guess in a data.frame — vis_guess","text":"vis_guess visualises class every single individual cell dataframe displays ggplot object, similar vis_dat. Cells coloured according class whether values missing. vis_guess estimates class individual elements using readr::guess_parser.  may currently slow larger datasets.","code":""},{"path":"http://ropensci.github.io/visdat/reference/vis_guess.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Visualise type guess in a data.frame — vis_guess","text":"","code":"vis_guess(x, palette = \"default\")"},{"path":"http://ropensci.github.io/visdat/reference/vis_guess.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Visualise type guess in a data.frame — vis_guess","text":"x data.frame palette character \"default\", \"qual\" \"cb_safe\". \"default\" (default) provides stock ggplot scale separating colours. \"qual\" uses experimental qualitative colour scheme providing distinct colours Type. \"cb_safe\" set colours appropriate colourblindness. \"qual\" \"cb_safe\" drawn http://colorbrewer2.org/.","code":""},{"path":"http://ropensci.github.io/visdat/reference/vis_guess.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Visualise type guess in a data.frame — vis_guess","text":"ggplot2 object displaying guess type values data frame position missing values.","code":""},{"path":[]},{"path":"http://ropensci.github.io/visdat/reference/vis_guess.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Visualise type guess in a data.frame — vis_guess","text":"","code":"messy_vector <- c(TRUE,                  \"TRUE\",                  \"T\",                  \"01/01/01\",                  \"01/01/2001\",                  NA,                  NaN,                  \"NA\",                  \"Na\",                  \"na\",                  \"10\",                  10,                  \"10.1\",                  10.1,                  \"abc\",                  \"$%TG\") set.seed(1114) messy_df <- data.frame(var1 = messy_vector,                        var2 = sample(messy_vector),                        var3 = sample(messy_vector)) vis_guess(messy_df)"},{"path":"http://ropensci.github.io/visdat/reference/vis_miss.html","id":null,"dir":"Reference","previous_headings":"","what":"Visualise a data.frame to display missingness. — vis_miss","title":"Visualise a data.frame to display missingness. — vis_miss","text":"vis_miss provides --glance ggplot missingness inside dataframe, colouring cells according missingness, black indicates missing cell grey indicates present cell. returns ggplot object, easy customize change labels.","code":""},{"path":"http://ropensci.github.io/visdat/reference/vis_miss.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Visualise a data.frame to display missingness. — vis_miss","text":"","code":"vis_miss(   x,   cluster = FALSE,   sort_miss = FALSE,   show_perc = TRUE,   show_perc_col = TRUE,   large_data_size = 9e+05,   warn_large_data = TRUE,   facet )"},{"path":"http://ropensci.github.io/visdat/reference/vis_miss.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Visualise a data.frame to display missingness. — vis_miss","text":"x data.frame cluster logical. TRUE specifies want use hierarchical clustering (mcquitty method) arrange rows according missingness. FALSE specifies want leave . Default value FALSE. sort_miss logical. TRUE arranges columns order missingness. Default value FALSE. show_perc logical. TRUE now adds \\ whole dataset legend. Default value TRUE. show_perc_col logical. TRUE adds \\ column x axis. Can disabled FALSE. Default value TRUE. missingness percentage column information presented facet argument used. Please see naniar package provide missingness summaries groups. large_data_size integer default 900000 (given `nrow(data.frame) * ncol(data.frame)``). can changed. See note details. warn_large_data logical - warn large data? Default TRUE see note details facet (optional) bare variable name, want create faceted plot, one plot per level variable. missingness percentage column information presented facet argument used. Please see naniar package provide missingness summaries groups.","code":""},{"path":"http://ropensci.github.io/visdat/reference/vis_miss.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Visualise a data.frame to display missingness. — vis_miss","text":"ggplot2 object displaying position missing values dataframe, percentage values missing present.","code":""},{"path":"http://ropensci.github.io/visdat/reference/vis_miss.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Visualise a data.frame to display missingness. — vis_miss","text":"missingness summaries columns rounded nearest integer. detailed summaries, please see summaries naniar R package, specifically, naniar::miss_var_summary().","code":""},{"path":"http://ropensci.github.io/visdat/reference/vis_miss.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Visualise a data.frame to display missingness. — vis_miss","text":"datasets might large plot, sometimes creating blank plot - happens, recommend downsampling data, either looking first 1,000 rows taking random sample. means get \"look\" data, better blank plot! See example code suggestions .","code":""},{"path":[]},{"path":"http://ropensci.github.io/visdat/reference/vis_miss.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Visualise a data.frame to display missingness. — vis_miss","text":"","code":"vis_miss(airquality)   vis_miss(airquality, cluster = TRUE)   vis_miss(airquality, sort_miss = TRUE)   vis_miss(airquality, facet = Month)   if (FALSE) { # if you have a large dataset, you might want to try downsampling: library(nycflights13) library(dplyr) flights %>%   sample_n(1000) %>%   vis_miss()  flights %>%   slice(1:1000) %>%   vis_miss() }"},{"path":"http://ropensci.github.io/visdat/reference/vis_value.html","id":null,"dir":"Reference","previous_headings":"","what":"Visualise the value of data values — vis_value","title":"Visualise the value of data values — vis_value","text":"Visualise values data 0 1 scale. works numeric data - see examples subset numeric data.","code":""},{"path":"http://ropensci.github.io/visdat/reference/vis_value.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Visualise the value of data values — vis_value","text":"","code":"vis_value(data, na_colour = \"grey90\", viridis_option = \"D\")"},{"path":"http://ropensci.github.io/visdat/reference/vis_value.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Visualise the value of data values — vis_value","text":"data data.frame na_colour character vector length one describing colour want NA values . Default \"grey90\" viridis_option character string indicating colormap option use. Four options available: \"magma\" (\"\"), \"inferno\" (\"B\"), \"plasma\" (\"C\"), \"viridis\" (\"D\", default option) \"cividis\" (\"E\").","code":""},{"path":"http://ropensci.github.io/visdat/reference/vis_value.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Visualise the value of data values — vis_value","text":"ggplot plot values","code":""},{"path":"http://ropensci.github.io/visdat/reference/vis_value.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Visualise the value of data values — vis_value","text":"","code":"vis_value(airquality)  vis_value(airquality, viridis_option = \"A\")  vis_value(airquality, viridis_option = \"B\")  vis_value(airquality, viridis_option = \"C\")  vis_value(airquality, viridis_option = \"E\")  if (FALSE) { library(dplyr) diamonds %>%   select_if(is.numeric) %>%   vis_value() }"},{"path":"http://ropensci.github.io/visdat/reference/visdat.html","id":null,"dir":"Reference","previous_headings":"","what":"visdat — visdat","title":"visdat — visdat","text":"visdat package helps preliminary visualisation data. visdat makes easy visualise whole dataset can visually identify problems.","code":""},{"path":[]},{"path":"http://ropensci.github.io/visdat/reference/visdat.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"visdat — visdat","text":"Maintainer: Nicholas Tierney nicholas.tierney@gmail.com (ORCID) contributors: Sean Hughes (ORCID) (Sean Hughes reviewed package rOpenSci, see https://github.com/ropensci/onboarding/issues/87) [reviewer] Mara Averick (Mara Averick reviewed package rOpenSci, see https://github.com/ropensci/onboarding/issues/87) [reviewer] Stuart Lee [contributor] Earo Wang [contributor] Nic Crane [contributor] Christophe Regouby [contributor]","code":""},{"path":[]},{"path":"http://ropensci.github.io/visdat/news/index.html","id":"visdat-060-20230201-superman-lazlo-bane","dir":"Changelog","previous_headings":"","what":"visdat 0.6.0 (2023/02/01) “Superman, Lazlo Bane”","title":"visdat 0.6.0 (2023/02/01) “Superman, Lazlo Bane”","text":"CRAN release: 2023-02-02","code":""},{"path":"http://ropensci.github.io/visdat/news/index.html","id":"new-feature-0-6-0","dir":"Changelog","previous_headings":"","what":"New Feature","title":"visdat 0.6.0 (2023/02/01) “Superman, Lazlo Bane”","text":"vis_value() visualising values dataset. rescales values 0 1. See #100 vis_binary() visualising datasets binary values - similar vis_value(), just binary data (0, 1, NA). See #125. Thank Trish Gilholm suggested use case . Implemented facetting vis_dat() vis_cor(), vis_miss() see (#78). next release implement facetting vis_value(), vis_binary(), vis_compare(), vis_expect(), vis_guess(). Implemented data methods plots data_vis_dat(), data_vis_cor(), data_vis_miss() see (#78). vis_dat() vis_miss() vis_guess() now render missing values list-columns (@cregouby #138) Added abbreviate_vars() function assist abbreviating data names (#140) Percentage missing columns vis_miss() now rounding integers - accurate representation missingness summaries please use naniar R package. new vignette customising colour palettes visdat, “Customising colour palettes visdat”.","code":""},{"path":"http://ropensci.github.io/visdat/news/index.html","id":"bug-fix-0-6-0","dir":"Changelog","previous_headings":"","what":"Bug Fix","title":"visdat 0.6.0 (2023/02/01) “Superman, Lazlo Bane”","text":"longer use old version gather_ (#141) resolve bug vis_value() displayed constant values NA values (#128) - constant values now shown 1. removed use now deprecated “aes_string” ggplot2 output plot vis_expect reorder columns (#133), fixed #143 @muschellij2.","code":""},{"path":"http://ropensci.github.io/visdat/news/index.html","id":"misc-0-6-0","dir":"Changelog","previous_headings":"","what":"Misc","title":"visdat 0.6.0 (2023/02/01) “Superman, Lazlo Bane”","text":"longer uses gdtools testing (#145) Use cli internally error messages. Speed internal functions visdat","code":""},{"path":"http://ropensci.github.io/visdat/news/index.html","id":"visdat-053-20190204-the-legend-of-lofi","dir":"Changelog","previous_headings":"","what":"visdat 0.5.3 (2019/02/04) “The Legend of LoFi”","title":"visdat 0.5.3 (2019/02/04) “The Legend of LoFi”","text":"CRAN release: 2019-02-15","code":""},{"path":"http://ropensci.github.io/visdat/news/index.html","id":"minor-change-0-5-3","dir":"Changelog","previous_headings":"","what":"Minor Change","title":"visdat 0.5.3 (2019/02/04) “The Legend of LoFi”","text":"Update vis_cor() use perceptually uniform colours scico package, using scico::scico(3, palette = \"vik\"). Update vis_cor() fixed legend values -1 +1 (#110) using options breaks limits. Special thanks thread answer Uses glue glue_collapse() instead paste paste0 adds WORDLIST spelling thanks usethis::use_spell_check()","code":""},{"path":"http://ropensci.github.io/visdat/news/index.html","id":"visdat-052-20181206-youth-the-midnight-kids","dir":"Changelog","previous_headings":"","what":"visdat 0.5.2 (2018/12/06) “Youth, The Midnight, Kids”","title":"visdat 0.5.2 (2018/12/06) “Youth, The Midnight, Kids”","text":"CRAN release: 2018-12-10","code":""},{"path":"http://ropensci.github.io/visdat/news/index.html","id":"minor-change-0-5-2","dir":"Changelog","previous_headings":"","what":"Minor Change","title":"visdat 0.5.2 (2018/12/06) “Youth, The Midnight, Kids”","text":"Internal error message improved Nic #102","code":""},{"path":"http://ropensci.github.io/visdat/news/index.html","id":"bug-fix-0-5-2","dir":"Changelog","previous_headings":"","what":"Bug Fix","title":"visdat 0.5.2 (2018/12/06) “Youth, The Midnight, Kids”","text":"Jim Hester fixed recent changes readr 1.2.0 PR #103, changes default behavior guess_parser, guess integer types default. opt-current behavior need pass guess_integer = TRUE.","code":""},{"path":"http://ropensci.github.io/visdat/news/index.html","id":"visdat-051-20180702-the-northern-lights-moonwalker","dir":"Changelog","previous_headings":"","what":"visdat 0.5.1 (2018/07/02) “The Northern Lights Moonwalker”","title":"visdat 0.5.1 (2018/07/02) “The Northern Lights Moonwalker”","text":"CRAN release: 2018-07-04","code":""},{"path":"http://ropensci.github.io/visdat/news/index.html","id":"new-feature-0-5-1","dir":"Changelog","previous_headings":"","what":"New Feature","title":"visdat 0.5.1 (2018/07/02) “The Northern Lights Moonwalker”","text":"vis_compare() comparing two dataframes dimensions Added NA colours vis_expect Added show_perc arg vis_expect show percentage expectations TRUE. #73 vis_cor visualise correlations dataframe vis_guess() displaying likely type cell dataframe Added draft vis_expect make easy look certain appearances numbers data. visdat now rOpenSci github repository","code":""},{"path":"http://ropensci.github.io/visdat/news/index.html","id":"minor-changes-0-5-1","dir":"Changelog","previous_headings":"","what":"Minor Changes","title":"visdat 0.5.1 (2018/07/02) “The Northern Lights Moonwalker”","text":"added CITATION visdat cite JOSS article updated options vis_cor use argument na_action use_op. cleaned organisation files internal functions Added appropriate legend x axis vis_miss_ly - thanks Stuart Lee Updated paper.md JOSS Updated old links doco Added Sean Hughes Mara Averick DESCRIPTION ctb. Minor changes paper JOSS","code":""},{"path":"http://ropensci.github.io/visdat/news/index.html","id":"bug-fixes-0-5-1","dir":"Changelog","previous_headings":"","what":"Bug Fixes","title":"visdat 0.5.1 (2018/07/02) “The Northern Lights Moonwalker”","text":"Fix bug reported #75 vis_dat(diamonds) errored seq_len(nrow(x)) inside internal function vis_gather_, used calculate row numbers. Using mutate(rows = dplyr::row_number()) solved issue. Fix bug reported #72 vis_miss errored one column given . issue using limits inside scale_x_discrete - used order columns data. necessary order one column data, created -else avoid step return plot early. Fix visdat x axis alignment show_perc_col = FALSE - #82 fix visdat x axis alignment - issue 57 fix bug column percentage missing print NA exactly equal 0.1% missing. - issue 62 vis_cor didn’t gather variables plotting appropriately - now fixed","code":""},{"path":"http://ropensci.github.io/visdat/news/index.html","id":"visdat-010-20170703-joss","dir":"Changelog","previous_headings":"","what":"visdat 0.1.0 (2017/07/03) (“JOSS”)","title":"visdat 0.1.0 (2017/07/03) (“JOSS”)","text":"CRAN release: 2017-07-11 lightweight CRAN submission - contain functions vis_dat vis_miss","code":""},{"path":[]},{"path":"http://ropensci.github.io/visdat/news/index.html","id":"new-features-0-0-7-9100","dir":"Changelog","previous_headings":"","what":"New Features","title":"visdat 0.0.7.9100 (2017/07/03)","text":"add_vis_dat_pal() (internal) add palette vis_dat vis_guess vis_guess now gets palette argument like vis_dat vis_guess_ly() vis_dat_ly() vis_compare_ly() simply wrap plotly::ggplotly(vis_*(data)). future written plotly can generated much faster","code":""},{"path":"http://ropensci.github.io/visdat/news/index.html","id":"minor-improvements-0-0-7-9100","dir":"Changelog","previous_headings":"","what":"Minor improvements","title":"visdat 0.0.7.9100 (2017/07/03)","text":"corrected testing vis_* family added .svg graphics correct vdiffr testing improved hover print method plotly.","code":""},{"path":[]},{"path":"http://ropensci.github.io/visdat/news/index.html","id":"new-features-0-0-6-9000","dir":"Changelog","previous_headings":"","what":"New Features","title":"visdat 0.0.6.9000 (2017/02/26)","text":"axes vis_ family now flipped default vis_miss now shows % missingness column, can disabled setting show_perc_col argument FALSE removed flip argument, default","code":""},{"path":"http://ropensci.github.io/visdat/news/index.html","id":"minor-improvements-0-0-6-9000","dir":"Changelog","previous_headings":"","what":"Minor Improvements","title":"visdat 0.0.6.9000 (2017/02/26)","text":"added internal functions improve extensibility debugging - vis_create_, vis_gather_ vis_extract_value_. suppress unneeded warnings arising compiling factors","code":""},{"path":[]},{"path":"http://ropensci.github.io/visdat/news/index.html","id":"minor-improvements-0-0-5-9000","dir":"Changelog","previous_headings":"","what":"Minor Improvements","title":"visdat 0.0.5.9000 (2017/01/09)","text":"Added testing visualisations vdiffr. Code coverage now 99% Fixed suggestions goodpractice::gp() Submitted rOpenSci onboarding paper.md written submitted JOSS","code":""},{"path":[]},{"path":"http://ropensci.github.io/visdat/news/index.html","id":"new-feature-0-0-4-9999","dir":"Changelog","previous_headings":"","what":"New Feature","title":"visdat 0.0.4.9999 (2017/01/08)","text":"Added feature flip = TRUE, vis_dat vis_miss. flips x axis ordering rows. closely resembles dataframe. vis_miss_ly new function uses plotly plot missing data, like vis_miss, interactive, without need call plotly::ggplotly . ’s fast, moment needs bit love legend front maintain style features (clustering, etc) current vis_miss. vis_miss now gains show_perc argument, displays % missing complete data. switched default addresses issue #19.","code":""},{"path":"http://ropensci.github.io/visdat/news/index.html","id":"new-feature-under-development-0-0-4-9999","dir":"Changelog","previous_headings":"","what":"New Feature (under development)","title":"visdat 0.0.4.9999 (2017/01/08)","text":"vis_compare new function allows compare two dataframes dimension. gives fairly ugly warning dimension. vis_dat gains “palette” argument line issue 26, drawn http://colorbrewer2.org/, currently three arguments, “default”, “qual”, “cb_safe”. “default” provides ggplot defaults, “qual” uses colour blind unfriendly colours, “cb_safe” provides colours friendly colour blindness.","code":""},{"path":"http://ropensci.github.io/visdat/news/index.html","id":"minor-improvements-0-0-4-9999","dir":"Changelog","previous_headings":"","what":"Minor Improvements","title":"visdat 0.0.4.9999 (2017/01/08)","text":"lines < 80 characters long removed instances 1:rnow(x) replaced seq_along(nrow(x)). Updated documentation, improved legend colours vis_miss_ly. removed export vis_dat_ly, currently work. Removed lot unnecessary @importFrom tags, included magrittr , added magrittr Imports Changes CAPS Headers news Title Case Made clear vis_guess() vis_compare beta updated documentation README vis_dat(), vis_miss(), vis_compare(), vis_guess() updated pkgdown docs updated DESCRIPTION URL bug report Changed default colours vis_compare different ggplot2 standards. vis_miss legend labels created using internal function miss_guide_label. miss_guide_label check data 100% missing 100% present display figure. Additionally, less 0.1% missing data, “<0.1% missingness” also displayed. sort gets around issue #18 moment. tests added miss_guide_label legend labels function. Changed legend label vis_miss, vis_dat, vis_guess. updated README Added vignette folder (vignettes added yet) Added appveyor-CI travis-CI, addressing issues #22 #23","code":""},{"path":"http://ropensci.github.io/visdat/news/index.html","id":"bug-fixes-0-0-4-9999","dir":"Changelog","previous_headings":"","what":"Bug Fixes","title":"visdat 0.0.4.9999 (2017/01/08)","text":"Update vis_dat() use purrr::dmap(fingerprint) instead mutate_each_(). solves issue #3 vis_dat couldn’t take variables spaces name.","code":""},{"path":[]},{"path":"http://ropensci.github.io/visdat/news/index.html","id":"new-features-0-0-3-9000","dir":"Changelog","previous_headings":"","what":"New Features","title":"# visdat 0.0.3.9000","text":"Interactivity plotly::ggplotly! Funcions vis_guess(), vis_dat(), vis_miss updated can make interactive using latest dev version plotly Carson Sievert.","code":""},{"path":[]},{"path":"http://ropensci.github.io/visdat/news/index.html","id":"new-features-0-0-2-9000","dir":"Changelog","previous_headings":"","what":"New Features","title":"# visdat 0.0.2.9000","text":"Introducing vis_guess(), function uses unexported function collectorGuess readr.","code":""},{"path":[]},{"path":"http://ropensci.github.io/visdat/news/index.html","id":"new-features-0-0-1-9000","dir":"Changelog","previous_headings":"","what":"New Features","title":"# visdat 0.0.1.9000","text":"vis_miss() vis_dat actually run","code":""}]
